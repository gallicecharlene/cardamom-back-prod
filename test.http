@endpoint=http://localhost:{{$dotenv PORT}}/api

### POST test authentification
POST {{endpoint}}/auth/login
Content-Type: application/json

{
<<<<<<< Updated upstream
    "email": "maia77778@maia.fr",
    "password": "123456"
=======
    "email": "testForShared@test.fr",
    "password": "test77"
>>>>>>> Stashed changes
}

### POST création d'un utilisateur (test avec bon mail valide)
POST {{endpoint}}/auth/signup
Content-Type: application/json

{
<<<<<<< Updated upstream
    "pseudo": "maia77778",
    "email": "maia77778@maia.fr",
    "password": "123456"
=======
    "pseudo": "testForShare@test.fr",
    "email": "testForShared@test.fr",
    "password": "test77"
>>>>>>> Stashed changes
}

### POST création d'un utilisateur (test avec mauvais mail)
POST {{endpoint}}/auth/signup
Content-Type: application/json

{
    "pseudo": "test4",
    "email": "chachlive.fr",
    "password": "123456"
}

### GET récupération d'un utilisateurs via l'id du token
GET {{endpoint}}/profile
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN}}


### PATCH modification d'un user via l'id du token 
PATCH {{endpoint}}/profile
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN}}
   
{
    "pseudo": "maia888",
    "email": "maia77778@maia.fr",
    "password": "123456"
}

### DELETE supprimer un utilisateur via l'id du token
DELETE {{endpoint}}/profile
Authorization: Bearer {{$dotenv TOKEN}}
<<<<<<< Updated upstream
=======

### POST créer un deck
POST {{endpoint}}/decks
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

{
    "title": "Capitales du monde2"
}
### GET récupérer tout les decks
GET {{endpoint}}/decks
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

### GET récupérer un deck
GET {{endpoint}}/decks/2
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

### GET récupérer un deck partagé
GET {{endpoint}}/decks/share/17162792853561
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN2}}

### PATCH modifier un deck
PATCH {{endpoint}}/decks/1
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

{
    "title": "Capitales du monde"
}
### PATCH modifier un deck partagé (ne doit pas fonctionner)
PATCH {{endpoint}}/decks/1
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN2}}

{
    "title": "Capitales du monde5"
}

### DELETE supprimer un deck
DELETE {{endpoint}}/decks/2
Authorization: Bearer {{$dotenv TOKEN1}}

### DELETE supprimer un deck partagé (supprime que les clé étrangère de la table de jointure)
DELETE {{endpoint}}/decks/1
Authorization: Bearer {{$dotenv TOKEN2}}


### POST création d'une flashcard
POST {{endpoint}}/flashcards
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

{
    "deck_id": 1,
    "title_front": "Quelle est la capitale de l'Italie ?",
    "title_back": "Roma"
}

### PATCH modification d'une flashcard
PATCH {{endpoint}}/flashcards/1
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

{
    "deck_id": 1,
    "title_front": "Quelle est la capitale de l'Italie ?",
    "title_back": "Rome"
}
### PATCH modification d'une flashcard partagée (ne doit pas fonctionner)
PATCH {{endpoint}}/flashcards/1
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN2}}

{
    "deck_id": 2,
    "title_front": "Quelle est la capitale de l'Italie ?",
    "title_back": "Rome"
}


### GET récupérer tout les stats d'un user (token) (getAll)
GET {{endpoint}}/stats
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

### GET récupérer tout les stats d'un deck(getByDeck)
GET {{endpoint}}/decks/2/stats
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN}}



### POST créer un stat (getOne)
POST {{endpoint}}/decks/1/stats
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

{
    "nb_card_consulted": 33,
    "nb_card_success": 10
}

### PATCH modifier un stat
PATCH {{endpoint}}/stats/3
Content-Type: application/json
Authorization: Bearer {{$dotenv TOKEN1}}

{
    "nb_card_consulted": 30,
    "nb_card_success": 20,
    "deck_id": 1,
    "stats_id": 3
}


### DELETE supprimer un stat
DELETE {{endpoint}}/stats/1
Authorization: Bearer {{$dotenv TOKEN1}}

### DELETE supprimer un stat 
DELETE {{endpoint}}/stats/2
Authorization: Bearer {{$dotenv TOKEN2}}
>>>>>>> Stashed changes
